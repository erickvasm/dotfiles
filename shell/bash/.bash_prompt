#!/usr/bin/env bash

# Desactivar el prompt por defecto
PS1=""

# Define los colores en variables
bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 85)
violet=$(tput setaf 92)
reset=$(tput sgr0)

# Método para obtener el nombre e icono de la rama actual
prompt_git_info() {
    if git rev-parse --is-inside-work-tree &>/dev/null; then
        local repoUrl="$(git config --get remote.origin.url)";
        local icon='';

        if grep -q 'chromium/src.git' <<< "${repoUrl}"; then
            icon='*'; # Icono para el repositorio chromium
        else
            icon=''; # Icono de git branch
        fi;

        local branchName='';
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
            git describe --all --exact-match HEAD 2> /dev/null || \
            git rev-parse --short HEAD 2> /dev/null || \
            echo '(unknown)')";

        echo -n "${violet}${icon} ${branchName}${reset} ";
    fi
}

# Método para obtener los iconos de cambios en Git y asignarles color rojo
prompt_git_changes() {
    local changes='';

    if git rev-parse --is-inside-work-tree &>/dev/null; then
        if ! $(git diff --quiet --ignore-submodules --cached); then
            changes+='+';
        fi;
        if ! $(git diff-files --quiet --ignore-submodules --); then
            changes+='!';
        fi;
        if [ -n "$(git ls-files --others --exclude-standard)" ]; then
            changes+='?';
        fi;
        if $(git rev-parse --verify refs/stash &>/dev/null); then
            changes+='\$';
        fi;
    fi;

    [ -n "${changes}" ] && changes="${red}[${changes}]${reset}";

    echo -n "${changes}";
}


# Método para determinar si hay un error y asignar color rojo al icono del prompt
prompt_error_color() {
    if [[ $? -ne 0 ]]; then
        echo -n "${red}";
    else
        echo -n "${violet}";
    fi
}

# Configurar el prompt de Bash
PS1+="\[${bold}\]\n"; # newline
PS1+="\n\$(prompt_error_color)⚡${reset} " # prompt symbol cambia de color según el estado de error
PS1+="\[${green}\]\W \[${reset}\]" # current directory
PS1+="\$(prompt_git_info)\$(prompt_git_changes)\n" # current branch con cambios en rojo
PS1+="↳  "
export PS1
